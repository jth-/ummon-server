#!/usr/bin/env node

var fs = require('fs')
var es = require('event-stream')
var request = require('request')

var argv = require('optimist')
  .usage('Count the lines in a file.\nUsage: $0')
  .options('r', {
    alias: 'run',
    demand: true,
    describe: 'The Run id to notify for'
  })
  .options('e', {
    alias: 'email',
    describe: 'Generate an email with out the output of the provided Run'
  })
  .options('campfire', {
    boolean: true,
    describe: 'Send a message to your configured campfire chatroom'
  })
  .options('v', {
    alias: 'verbose',
    boolean: true,
    describe: 'Return all meta data with each log row'
  })
  .argv

var config = require(require('path').resolve(__dirname, '../lib/ummon.js')).loadConfig()

var runID = argv.run;
var run;

es.pipeline(
  fs.createReadStream(config.log.path, {encoding: 'utf8'}),
  es.split(), // Split on new lines
  es.parse(), // JSON.parse()
  es.map(function (data, callback) {
    // Filter out only the runid we want
    if (data.runid === runID) {
      if (data.run) {
        run = data.run
      }
      callback(null, data)
    } else {
      callback()
    }
  }),
  es.stringify(), // JSON.stringify()
  es.map(function (data, callback){
    // If verbose isn't passed, turn the json into
    // a simple string
    if (!argv.verbose) {
      data = JSON.parse(data)

      data = data.msg + '\n';
    }
    callback(null, data)
  }),
  es.wait(function (err, data) {
    if (argv.campfire) {

      data = "[Tasks Error] "+ run.task.id+" exited with code " + run.exitCode + " on "+require('os').hostname()+"\n\n" + data;

      request.post({
        url:config.campfire.speak_url,
        body: {"message":{"body":data, "type":"PasteMessage"}},
        auth: {user: config.campfire.apitoken},
        json: true
      })
    }
  })
)